rm -rf * //to remove all files in directory

mvn eclipse:eclipse -DdownloadSources=true

mvn spring-boot:run

~/kafka/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic msg //topic with name msg

ps -ef | grep kafka

netstat -tulpn --displays network connections
------------------------------------------------------------------------------------------------------------
bin/kafka-topics.sh --list --zookeeper localhost:2181 //list topics
------------------------------------------------------------------------------------------------------------
bin/kafka-server-start.sh config/server.properties  //start server

bin/kafka-console-producer.sh --broker-list localhost:9094 --topic myTopic //start producer

bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic Ganga --from-beginning //start consumer
------------------------------------------------------------------------------------------------------------
show dbs

use dbname

db.createCollection(name, options)

show collections

db.collection_name.find() //display values from collection 

db.mycol.find().pretty()
------------------------------------------------------------------------------------------------------------
/usr/bin/mysql -u root -p --------------->password =opex

show databases;

use dbname;

create table Buyer(BuyerId int not null AUTO_INCREMENT,BuyerName varchar(100)not null,OrderStatus varchar(10),PRIMARY KEY(BuyerId));

create table Suspend(BuyerId int not null PRIMARY KEY,SupendenDate DATE,FOREIGN KEY(BuyerId) REFERENCES Buyer(BuyerId));
 
SELECT VERSION();
 
create table rejectionCount(BuyerId int not null AUTO_INCREMENT,Count int,PRIMARY KEY(BuyerId));

create table blacklist(BuyerId int not null PRIMARY KEY,SupendenDate DATE,FOREIGN KEY(BuyerId) REFERENCES rejectionCount(BuyerId));
------------------------------------------------------------------------------------------------------------
create database suspension;

create table suspended_list(buyer_id varchar(36) not null PRIMARY KEY,supended_date DATE);

create table rejection_count(buyer_id varchar(36) not null,order_rejection_count int,PRIMARY KEY(buyer_id));

create table payment_details(buyer_id varchar(36) not null,status varchar(10),due_date Date,payed_date Date,PRIMARY KEY(buyer_id));
------------------------------------------------------------------------------------------------------------
create database organization;

create table organization_details(org_id varchar(36) primary key,org_name varchar(40),org_type varchar(40),org_address varchar(40),org_city varchar(40),org_state varchar(40));
------------------------------------------------------------------------------------------------------------
Suspension msg

{"correlation_id" : "1","message_type" : "order_cancelled","version" : "1.0.0","originator" : "SuspensionService","payload" : { "order_id":"1","buyer_id":"3","datetime":"5"}}
------------------------------------------------------------------------------------------------------------
Organization msg

{"correlation_id" : "1","message_type" : "msg","version" : "1.0.0","originator" : "OraganizationService","payload" : { "id" : "1","name" : "opex","type" : "orgType","registered_address_line_1" : "addressLine1","registered_address_line_2" : "addressLine2","city" : "Pune",  "state" : "Maharashtra","organization_type" : "String"}}
------------------------------------------------------------------------------------------------------------
//
//		try {
//			JsonNode result = new ObjectMapper().readTree(listString);
//			//String org_Id = result.get("id").asText();
//			//logger.info(org_Id);
//			logger.info(result.asText());
//			//return result;
//		} catch (Exception e) {
//			e.printStackTrace();
//			return null;
//		}

// ObjectNode node = JsonNodeFactory.instance.objectNode();
// node.set("id",result.get("id"));
// node.set("name",result.get("name"));
// JSONArray json = new JSONArray();
// return listString;

